t(
"namespace x {let x: i32;}\n"
"let x = 69;\n"
"fn bar() -> void { \n"
"    struct x {};\n"
"    x = 420;\n"
"    let x: i32 = 213123; \n"
"    {\n"
"        x = 696969;\n"
"        {\n"
"            x = 11111;\n"
"        }\n"
"    }\n"
"}\n"
"fn func() -> void { x = 44444444; }\n"
,pass),
t(
"let x = 69;\n"
"namespace foo {\n"
"    let x: i32 = 69420;\n"
"    namespace gaming {\n"
"        let x: i32;\n"
"        fn func() -> void {\n"
"            x = 222222;\n"
"        }\n"
"    }\n"
"    fn func() -> void {\n"
"        x = 111111;\n"
"        gaming::x = 333333;\n"
"    }\n"
"}\n"
,pass),
t(
"let x = 69;\n"
"namespace foo {\n"
"    let x: i32 = 69420;\n"
"    namespace gaming {\n"
"        let x: i32;\n"
"    }\n"
"}\n"
"fn func() -> void {\n"
"    x = 111111;\n"
"    foo::x = 222222; \n"
"    foo::gaming::x = 333333;\n"
"}\n"
,pass),

t(
"let x: i32 = 123123;                                  \n"
"let a: i32 = 123123;                                  \n"
"let z: i32 = 123123;                                  \n"
"fn func_name() -> const i32* {          \n"
"    x = 69420;                                        \n"
"    a = 69420;                                        \n"
"    let x = 1111111;                                  \n"
"    {                                                 \n"
"       z = 69;                                        \n"
"       let x: f64;                                    \n"
"       x = 12.0f;                                     \n"
"    }                                                 \n"
"    x = 213;                                          \n"
"}                                                     \n"
, pass),
t(
"struct gaming {let ahhh: i32;};\n"
"let x: gaming;\n"
"fn func() -> void {\n"
"     struct gaming {let bbbb: f32;};\n"
"     let x: gaming = {123123};\n"
"        x.bbbb = 23.0f;\n"
"     {\n"
"         struct gaming {let vvvvv = 321;};\n"
"         let x: gaming;\n"
"     }\n"
"}\n"
, pass),
t(
"let x: i32;\n"
"namespace foo {\n"
"    struct bar {\n"
"        fn func() -> void {\n"
"           {\n"
"                x = 21313;\n"
"           }\n"
"           {\n"
"                let x = 21313;\n"
"           }\n"
"           {\n"
"                let x = 21313;\n"
"           }\n"
"        }\n"
"    };\n"
"}\n"
,pass),
t(
"fn func() -> void  {\n"
"     //fnc()::x\n"
"     let x = 123;\n"
"     { //func()::0::\n"
"        struct bar{};\n"
"         let x = 21; //func()::0::x\n"
"         { //func()::0::0\n"
"             let x = 6969;\n"
"         }\n"
"     }\n"
"     { //func()::1::\n"
"        struct bar{};\n"
"         let x = 2132; //func()::1::x\n"
"         { //func()::1::0\n"
"             let x = 1; //func()::1::0::x\n"
"         }\n"
"         { //func()::1::1\n"
"             let x = 2; //func()::1::1::x\n"
"         }\n"
"     }\n"
"}\n"
,pass),

t(
"struct foo {\n"
"    let x: i32 = 123213;\n"
"};\n"
"fn func() -> void {\n"
"    let y = foo::x;\n"
"}\n"
,fail),

t(
" let var = {};\n"
,fail),
t(
"struct foo {\n"
"    struct bar {\n"
"        let x = 213;\n"
"    };\n"
"};\n"
,pass),
//t(
//"let x: i32 = {213} + {123};\n"
//,fail),

t(                                      
"namespace huh {\n"
"   struct foo {\n"
"        fn mefunc() -> void {}\n"
"        fn somefunc() -> void {}\n"
"        fn another() -> void {\n"
"            struct bar {};\n"
"            {{\n"
"                somefunc();\n"
"            }}\n"
"        }\n"
"   };\n"
"}\n"
, pass),
t(
"let var = 123123213;\n"
"fn foo() -> i32  {\n"
"    let x: i32 = 3124124;\n"
"    {\n"
"    struct gaming {let x: i32;};\n"
"    let var = gaming{2313};\n"
"    var.x = 69420;\n"
"    }\n"
"}\n"
, pass),

t(
"struct foo {\n"
"    struct bar {let y = 23;};\n"
"\n"
"    let x: i32 = 21313;\n"
"    let var = bar{1212};\n"
"\n"
"    fn func(param: i32) -> void {\n"
"        x = 6969;\n"
"        var.y = 343434;\n"
"    }\n"
"};\n"
"fn some() -> void {\n"
"    let local = foo{12, foo::bar{3}};\n"
"    local.var.y = 10;\n"
"}\n"
,pass),

t(
"fn func() -> void;\n"
"fn func() -> void {}\n"
"fn func() -> void;\n"
"struct gaming;\n"
"struct gaming{};\n"
"struct gaming;\n"
"struct gaming;\n"
, pass),
